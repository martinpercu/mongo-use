use("tester_store")

// // $in, sirve para values & arrays===> "$in" seria como "INcluidos"
// db.inventory.find({ qty: { $in: [ 20, 25 ] } })
// db.inventory.find({ tags: { $in: [ "electronics", "book" ] } })

// // $ni, values & arrays ===> "$nin" seria como "No INcluidos"
// db.inventory.find({ tags: { $nin: [ "electronics", "book" ] } })


// db.inventory.find({tags: "book"})

// // Importante: el orden del arrays tiene que ser EXACTAMENTE ese.
// // Osea este devuelve _id: 3
// db.inventory.find({tags: [ "school", "book" ] })
// // Estos no devuelven nada
// db.inventory.find({tags: [[ "school", "headphone" ]] })
// db.inventory.find({tags: [ "school" ] })


// operators only for arrays

// // $all   ==> (Que tenga TODOS los elementos del array no importa el orden)
// db.inventory.find({ tags: { $all: [ "school", "headphone" ] } })
// Osea este devuelve lo mismo
// db.inventory.find({ tags: { $all: [ "headphone", "school" ] } })

// // $size  ==> (cantidad elemento en array)
// db.inventory.find({ tags: { $size: 2 } })

// // $elementMatch
// db.survey.find({ results: { $elemMatch: { product: "xyz" } } })
db.survey.find({
  results: {
    $elemMatch: {
      product: "xyz" ,
      score: {$gt: 6 }
    }}
  })
